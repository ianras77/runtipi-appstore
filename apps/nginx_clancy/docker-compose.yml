version: "3.9"
services:
  nginx_clancy:
    image: nginx:1.25.3
    container_name: nginx_clancy
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - ${APP_DATA_DIR}/data/config/nginx.conf:/etc/nginx/nginx.conf

    networks:
      - tipi_main_network
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.nginx_clancy-web-redirect.redirectscheme.scheme: https
      traefik.http.services.nginx_clancy.loadbalancer.server.port: 80
      # Web
      traefik.http.routers.nginx_clancy-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nginx_clancy-insecure.entrypoints: web
      traefik.http.routers.nginx_clancy-insecure.service: nginx_clancy
      traefik.http.routers.nginx_clancy-insecure.middlewares: nginx_clancy-web-redirect
      # Websecure
      traefik.http.routers.nginx_clancy.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nginx_clancy.entrypoints: websecure
      traefik.http.routers.nginx_clancy.service: nginx_clancy
      traefik.http.routers.nginx_clancy.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.nginx_clancy-local-insecure.rule: Host(`nginx_clancy.${LOCAL_DOMAIN}`)
      traefik.http.routers.nginx_clancy-local-insecure.entrypoints: web
      traefik.http.routers.nginx_clancy-local-insecure.service: nginx_clancy
      traefik.http.routers.nginx_clancy-local-insecure.middlewares: nginx_clancy-web-redirect
      # Local domain secure
      traefik.http.routers.nginx_clancy-local.rule: Host(`nginx_clancy.${LOCAL_DOMAIN}`)
      traefik.http.routers.nginx_clancy-local.entrypoints: websecure
      traefik.http.routers.nginx_clancy-local.service: nginx_clancy
      traefik.http.routers.nginx_clancy-local.tls: true
      runtipi.managed: true

version: "3.9"

services:
  app:
    image: codeberg.org/readeck/readeck:latest
    container_name: readeck
    depends_on:
      - db
    ports:
      - ${APP_PORT}:8000
    environment:
      - READECK_DATABASE_SOURCE=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@readeck-db:5432/readeck
      - READECK_LOG_LEVEL=info
      - READECK_SERVER_HOST=0.0.0.0
      - READECK_SERVER_PORT=8000
      - READECK_SERVER_PREFIX=/
      - READECK_ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - ${APP_DATA_DIR}/readeck/data:/readeck
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/readeck", "healthcheck", "-config", "config.toml"]
      interval: 30s
      timeout: 2s
      retries: 3
    networks:
      - tipi_main_network
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.readeck-web-redirect.redirectscheme.scheme: https
      traefik.http.services.readeck.loadbalancer.server.port: 8000
      # Web
      traefik.http.routers.readeck-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.readeck-insecure.entrypoints: web
      traefik.http.routers.readeck-insecure.service: readeck
      traefik.http.routers.readeck-insecure.middlewares: readeck-web-redirect
      # Websecure
      traefik.http.routers.readeck.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.readeck.entrypoints: websecure
      traefik.http.routers.readeck.service: readeck
      traefik.http.routers.readeck.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.readeck-local-insecure.rule: Host(`readeck.${LOCAL_DOMAIN}`)
      traefik.http.routers.readeck-local-insecure.entrypoints: web
      traefik.http.routers.readeck-local-insecure.service: readeck
      traefik.http.routers.readeck-local-insecure.middlewares: readeck-web-redirect
      # Local domain secure
      traefik.http.routers.readeck-local.rule: Host(`readeck.${LOCAL_DOMAIN}`)
      traefik.http.routers.readeck-local.entrypoints: websecure
      traefik.http.routers.readeck-local.service: readeck
      traefik.http.routers.readeck-local.tls.certresolver: myresolver
      runtipi.managed: true

  db:
    image: postgres:16-alpine
    container_name: readeck-db
    environment:
      - POSTGRES_DB=readeck
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - ${APP_DATA_DIR}/readeck/db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - tipi_main_network

volumes:
  readeck-data:
  readeck-db:

networks:
  tipi_main_network:
    external: true

